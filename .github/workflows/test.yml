name: Test CI

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    name: Run Tests 
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - uses: actions/checkout@v4
        name: Checkout OOPetris main repo
        with:
          fetch-depth: "0"
          repository: OpenBrickProtocolFoundation/oopetris
          ref: main
          path: ./oopetris
          submodules: false

      - name: Setup Clang
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          sudo apt-get install libc++-18* libc++abi*18* llvm-18 -y
          echo "CC=clang-18" >> "$GITHUB_ENV"
            echo "CXX=clang++-18" >> "$GITHUB_ENV"
              
        # NOTE: meson has no dependencies, so --break-system-packages doesn't really break anything!
      - name: Setup meson
        run: |
          sudo pip install meson --break-system-packages

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build valgrind gcovr libcriterion-dev -y

      - name: Configure
        run: | 
            cd oopetris
            meson setup build -Db_coverage=true -Dbuildtype=debugoptimized -Ddefault_library=shared -Dclang_libcpp=enabled -Donly_build_libs=true

      - name: Build and install Libs
        run: |
          cd oopetris 
          sudo meson install -C build 

      - name: Build Wrapper
        run: | 
          meson setup build -Db_coverage=true -Dbuildtype=debugoptimized -Ddefault_library=shared -Dclang_libcpp=enabled -Dtests=true -Dexample=true
          meson compile -C build

      - name: Test Wrapper
        run: | 
          strace ./build/tests/tests
          ls -sla  /usr/local/lib/x86_64-linux-gnu/
          meson test -C build --verbose
          ninja coverage -C build

      - name: Create Coverage Report
        uses: insightsengineering/coverage-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ./build/meson-logs/coverage.xml
          fail: true
          publish: true
          coverage-summary-title: "Code Coverage Summary"
          togglable-report: true

      - name: Upload test coverage artifacts
        uses: actions/upload-artifact@v4
        with:
            name: Tests coverage artifacts
            path: |
              ./build/meson-logs/coverage.xml
              ./build/meson-logs/coveragereport/


      - name: Test for leaks with valgrind (Linux)
        run: | 
            valgrind --tool=memcheck --leak-check=full --error-exitcode=1 ./build/example/example ./tests/files/correct.rec   
